import streamlit as st
# 1) Configura√ß√£o de p√°gina (sempre primeiro)
st.set_page_config(
    page_title="Dashboard de Inscri√ß√µes - RNP 2024",
    layout="wide",
    initial_sidebar_state="expanded",
)

import pandas as pd
import plotly.express as px
from utils.data_loader import load_data

# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî Autentica√ß√£o ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
USERS = {"admin": st.secrets.get("admin_password", "minha_senha_segura")}  
if "logged_in" not in st.session_state:
    st.session_state.logged_in = False
if not st.session_state.logged_in:
    st.markdown(
        """
        <style>[data-testid="stSidebar"]{visibility:hidden;}</style>
        """, unsafe_allow_html=True)
    st.title("üîí Login")
    user = st.text_input("Usu√°rio", key="login_user")
    pwd = st.text_input("Senha", type="password", key="login_pwd")
    if st.button("Entrar"):
        if USERS.get(user) == pwd:
            st.session_state.logged_in = True
            st.success("Login bem-sucedido!")
        else:
            st.error("Usu√°rio ou senha incorretos")
    st.stop()
# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî Fim autentica√ß√£o ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

# Carregamento de dados
df_2025 = load_data(path=None)
df_2024 = load_data(path="2024.csv")

# Navega√ß√£o por abas (tabs)
tabs = st.tabs([
    "Vis√£o Geral", 
    "Demografia", 
    "Geogr√°fico", 
    "Educa√ß√£o", 
    "Profissional", 
    "Comparativo"
])

# Aba 1: Vis√£o Geral
with tabs[0]:
    st.header("Vis√£o Geral")
    st.markdown("Resumo geral das inscri√ß√µes, principais KPIs e vis√£o r√°pida do evento.")
    # Aqui voc√™ pode adicionar m√©tricas, cards, ou pequenos charts

# Aba 2: Demografia
with tabs[1]:
    st.header("Demografia")
    st.markdown("Informa√ß√µes demogr√°ficas dos participantes.")
    # Adicione gr√°ficos de g√™nero, idade, etc.

# Aba 3: Geogr√°fico
with tabs[2]:
    st.header("Geogr√°fico")
    st.markdown("Distribui√ß√£o geogr√°fica dos participantes.")
    # Mapas ou gr√°ficos por estado/cidade

# Aba 4: Educa√ß√£o
with tabs[3]:
    st.header("Educa√ß√£o")
    st.markdown("N√≠vel de escolaridade e √°reas de interesse dos participantes.")
    # Gr√°ficos relacionados √† educa√ß√£o

# Aba 5: Profissional
with tabs[4]:
    st.header("Profissional")
    st.markdown("Perfil profissional e setores de atua√ß√£o.")
    # Gr√°ficos de setor, empresa, cargo, etc.

# Aba 6: Comparativo
with tabs[5]:
    st.header("Comparativo 2024 vs 2025")
    show_raw = st.checkbox("Mostrar tabelas de dados brutos")
    if show_raw:
        st.subheader("Dados 2024")
        st.dataframe(df_2024)
        st.subheader("Dados 2025")
        st.dataframe(df_2025)

    # Fun√ß√£o para preparar dados acumulados
    def prepare_cumulative(df, label):
        df['Data Inscri√ß√£o'] = pd.to_datetime(df['Data Inscri√ß√£o'], dayfirst=True, errors='coerce')
        df_agg = df.groupby('Data Inscri√ß√£o').size().reset_index(name='inscricoes_diarias')
        df_agg = df_agg.sort_values('Data Inscri√ß√£o')
        df_agg['inscricoes_acumuladas'] = df_agg['inscricoes_diarias'].cumsum()
        start_date = df_agg['Data Inscri√ß√£o'].iloc[0]
        df_agg['dias_desde_inicio'] = (df_agg['Data Inscri√ß√£o'] - start_date).dt.days
        df_agg['ano'] = label
        return df_agg

    # Verifica colunas
    if 'Data Inscri√ß√£o' in df_2025.columns and 'Data Inscri√ß√£o' in df_2024.columns:
        cum2025 = prepare_cumulative(df_2025, '2025')
        cum2024 = prepare_cumulative(df_2024, '2024')
        df_concat = pd.concat([cum2024, cum2025], axis=0)

        # Gr√°fico comparativo
        fig = px.line(
            df_concat,
            x='dias_desde_inicio',
            y='inscricoes_acumuladas',
            color='ano',
            title="Inscri√ß√µes Acumuladas (Dias desde In√≠cio)",
            labels={
                'dias_desde_inicio': 'Dias desde In√≠cio',
                'inscricoes_acumuladas': 'Total de Inscri√ß√µes',
                'ano': 'Ano'
            }
        )
        st.plotly_chart(fig, use_container_width=True)
    else:
        st.error("A coluna 'Data Inscri√ß√£o' n√£o foi encontrada em um dos DataFrames.")
